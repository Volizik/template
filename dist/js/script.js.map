{"version":3,"sources":["script.js"],"names":["Todo","options","titleField","document","querySelector","dateField","descField","saveBtn","delBtn","newNoteBtn","body","tabsList","addEventListener","clickToTab","bind","createNewNote","saveNote","deleteNote","initTabs","JSON","parse","localStorage","getItem","notes","getNotes","innerHTML","forEach","note","index","length","id","active","click","getAttribute","showCurrentNoteInfo","classList","remove","value","Date","now","toLocaleString","arr","isValid","validation","newNote","Number","title","date","desc","currentNote","find","indexOf","clear","setItem","stringify","Math","random","push","del","confirm","activeBtn","noteId","result","filter","item","storage","event","buttons","querySelectorAll","target","contains","add","trim","alert"],"mappings":"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","file":"script.js","sourcesContent":["class Todo {\n\n    constructor() {\n        this.options = {\n            // Fields\n            titleField: document.querySelector('.sidebar__title'),\n            dateField: document.querySelector('.sidebar__date'),\n            descField: document.querySelector('.sidebar__desc'),\n            // Buttons\n            saveBtn: document.querySelector('.sidebar__save'),\n            delBtn: document.querySelector('.sidebar__del'),\n            newNoteBtn: document.querySelector('.main__btn-new'),\n            // Body\n            body: document.querySelector('.main__body'),\n            tabsList: document.querySelector('.main__tabs')\n        };\n        this.options.tabsList.addEventListener('click', this.clickToTab.bind(this));\n        this.options.newNoteBtn.addEventListener('click', this.createNewNote.bind(this));\n        this.options.saveBtn.addEventListener('click', this.saveNote.bind(this));\n        this.options.delBtn.addEventListener('click', this.deleteNote.bind(this));\n\n        this.initTabs();\n    }\n\n    getNotes() {\n        // Storage\n        return JSON.parse(localStorage.getItem('notes')) || [];\n    }\n\n    initTabs() {\n        const notes = this.getNotes();\n        this.options.tabsList.innerHTML = '';\n        notes.forEach((note, index) => {\n            this.options.tabsList.innerHTML += `<button \n                                    class=\"main__button ${notes.length - 1 === index ? 'main__button--active' : ''}\" \n                                    id=${note.id}\n                                    >№${index + 1} \n                                    </button>`;\n        });\n        const active = document.querySelector('.main__button--active');\n        if (active) {\n            active.click();\n            const id = active.getAttribute('id');\n            this.showCurrentNoteInfo(id);\n        } else {\n            this.createNewNote();\n        }\n    }\n\n    createNewNote() {\n        let active = document.querySelector('.main__button--active');\n        if (active) {\n            if (!active.getAttribute('id')) {\n                // Если уже идет процесс создания заметки\n                return false\n            }\n            active.classList.remove('main__button--active');\n        }\n        this.options.titleField.value = '';\n        this.options.dateField.value = new Date(Date.now()).toLocaleString('ru-RU');\n        this.options.descField.value = '';\n        this.options.body.innerHTML = '';\n        this.options.tabsList.innerHTML += `<button class=\"main__button main__button--active\">New note</button>`;\n    }\n\n    saveNote() {\n        const active = document.querySelector('.main__button--active');\n        const id = active.getAttribute('id');\n        let arr = this.getNotes();\n        let isValid = this.validation();\n        if (!isValid) {\n            return false;\n        }\n        if (id) {\n            let newNote = {\n                id: Number(id),\n                title: this.options.titleField.value,\n                date: this.options.dateField.value,\n                desc: this.options.descField.value\n            };\n            const currentNote = arr.find( note => note.id === Number(id));\n            const index = arr.indexOf(currentNote);\n            arr[index] = newNote;\n            localStorage.clear();\n            localStorage.setItem('notes', JSON.stringify(arr));\n            this.options.body.innerHTML = `\n                <h3>${newNote.title} <span>${newNote.date}</span></h3>\n                <p>${newNote.desc}</p>\n            `;\n        } else {\n            let newNote = {\n                id: Math.random(),\n                title: this.options.titleField.value,\n                date: this.options.dateField.value,\n                desc: this.options.descField.value\n            };\n            arr.push(newNote);\n            localStorage.clear();\n            localStorage.setItem('notes', JSON.stringify(arr));\n            this.initTabs();\n        }\n    }\n\n    deleteNote() {\n        let del = confirm('Вы действительно хотите удалить заметку?');\n        if (!del) {\n            return;\n        }\n        const activeBtn = document.querySelector('.main__button--active');\n        const noteId = activeBtn.getAttribute('id');\n        let arr = this.getNotes();\n        const result = arr.filter( item => item.id !== Number(noteId) );\n        localStorage.clear();\n        localStorage.setItem('notes', JSON.stringify(result));\n        this.initTabs();\n    }\n\n    showCurrentNoteInfo(id) {\n        const storage = this.getNotes();\n        const currentNote = storage.find( item => item.id === Number(id) );\n        this.options.body.innerHTML = `\n            <h3>${currentNote.title} <span>${currentNote.date}</span></h3>\n            <p>${currentNote.desc}</p>\n        `;\n        this.options.titleField.value = currentNote.title;\n        this.options.dateField.value = currentNote.date;\n        this.options.descField.value = currentNote.desc;\n    }\n\n    clickToTab(event) {\n        const buttons = document.querySelectorAll('.main__button');\n        if (event.target.classList.contains('main__button')) {\n            const id = event.target.getAttribute('id');\n            const active = document.querySelector('.main__button--active');\n            if (active.getAttribute('id')) {\n                active.classList.remove('main__button--active');\n                event.target.classList.add('main__button--active');\n                this.showCurrentNoteInfo(id);\n            } else {\n                // Если это создание новой заметки\n                if (buttons.length > 1) {\n                    // Если заметок больше чем одна\n                    active.remove();\n                    event.target.classList.add('main__button--active');\n                    this.showCurrentNoteInfo(id);\n                }\n            }\n        }\n    }\n\n    validation() {\n        if (this.options.titleField.value.trim() === '' || this.options.descField.value.trim() === '') {\n            alert('Все поля должны быть заполнены!');\n            return;\n        }\n        return true;\n    }\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    new Todo();\n});\n"]}